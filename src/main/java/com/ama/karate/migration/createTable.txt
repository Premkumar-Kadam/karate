CREATE TABLE roles (
    id SERIAL PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE,
    abbr VARCHAR(50) NOT NULL UNIQUE,
    active BOOLEAN NOT NULL DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) NOT NULL
);

CREATE TABLE user (
    id SERIAL PRIMARY KEY,
    phone_no VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(100) NOT NULL DEFAULT 'ama@123',
    email VARCHAR(100) NOT NULL UNIQUE,
    full_name VARCHAR(255) NOT NULL,
    parent_name VARCHAR(255) NOT NULL,
    alternate_number VARCHAR(50),
    address TEXT NOT NULL,
    profile_url VARCHAR(255) NOT NULL,
    role_id INTEGER REFERENCES roles(id),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) NOT NULL,
    active BOOLEAN NOT NULL DEFAULT true
);

CREATE TABLE user_title (
    id SERIAL PRIMARY KEY,
    user_lid INTEGER REFERENCES public.user(id),
    title VARCHAR(50) NOT NULL UNIQUE,
    description TEXT,
    active BOOLEAN NOT NULL DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) NOT NULL
);

CREATE TABLE class_master (
    id SERIAL PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    address VARCHAR(255) NOT NULL,
    city VARCHAR(255) NOT NULL,
    is_main BOOLEAN NOT NULL DEFAULT FALSE,
    start_date DATE NOT NULL,
    timing TEXT NOT NULL,
    fees VARCHAR(100) NOT NULL,
    admission_fees VARCHAR(100) NOT NULL, -- Corrected spelling
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) NOT NULL,
    active BOOLEAN NOT NULL DEFAULT true
);

CREATE TABLE belt_master (
    id SERIAL PRIMARY KEY,
    colour VARCHAR(50) NOT NULL,
    fees VARCHAR(100) NOT NULL,
    level INT NOT NULL,
    portion TEXT,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) NOT NULL,
    active BOOLEAN NOT NULL DEFAULT true
);

CREATE TABLE user_class (
    id SERIAL PRIMARY KEY,
    user_lid INTEGER REFERENCES public.user(id),
    class_lid INTEGER REFERENCES class_master(id),
    belt_lid INTEGER REFERENCES belt_master(id),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) NOT NULL,
    active BOOLEAN NOT NULL DEFAULT true,
    UNIQUE(user_lid, class_lid, belt_lid)
);

CREATE TABLE user_belt_record (
    id SERIAL PRIMARY KEY,
    user_lid INTEGER REFERENCES public.user(id),
    class_lid INTEGER REFERENCES class_master(id),
    belt_lid INTEGER REFERENCES belt_master(id),
    exam_date DATE NOT NULL,
    status VARCHAR(100) NOT NULL,
    fees VARCHAR(100) NOT NULL,
    location VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) NOT NULL,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) NOT NULL
);

CREATE TABLE fees_type_master (
    id SERIAL PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE,
    abbr VARCHAR(50) NOT NULL UNIQUE,
    active BOOLEAN NOT NULL DEFAULT true,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) NOT NULL
);

CREATE TABLE user_fees (
    id SERIAL PRIMARY KEY,
    user_lid INTEGER REFERENCES public.user(id),
    class_lid INTEGER REFERENCES class_master(id),
    fees_type_lid INT REFERENCES fees_type_master(id),
    fees VARCHAR(200) NOT NULL,
    remark VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) NOT NULL,
    active BOOLEAN NOT NULL DEFAULT true
);
